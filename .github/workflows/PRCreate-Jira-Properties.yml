name: PRCreate-Jira-Properties
on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  get-jira-properties:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      checks: write
      contents: read
      deployments: read
      id-token: write
      issues: read 
      packages: write      
      pull-requests: write    
    steps:
    - name: Login
      uses: atlassian/gajira-login@master
      env:
        JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
        JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
        JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}

    - name: Get Issue Key From Branch
      id: get-issue-key
      uses: atlassian/gajira-find-issue-key@v3
      with:
        string: ${{ github.head_ref }}

    - name: Get Issue Properties
      id: issue
      uses: frieder/jira-issue-info@v1
      with:
        issue: ${{ steps.get-issue-key.outputs.issue }}

    - name: Get Issue Type
      id: determine-issue-type
      run: echo "issue_type=${{fromJSON(steps.issue.outputs.json).fields.issuetype.name}}" >> "$GITHUB_OUTPUT"  

    - name: Set Bug Label
      if: ${{ steps.determine-issue-type.outputs.issue_type == 'Bug' }}
      uses: actions-ecosystem/action-add-labels@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        labels: "bug"
        number: ${{ github.event.pull_request.number }}

    - name: Determine Story Type
      if: ${{ steps.determine-issue-type.outputs.issue_type == 'Story' }}
      id: determine-story-type
      run: echo "story_type=${{fromJSON(steps.issue.outputs.json).fields.customfield_10035.value}}" >> "$GITHUB_OUTPUT"

    - name: Test Output
      run: echo "${{ steps.determine-story-type.outputs.story_type }}"

    - name: Determine Story Label
      id: determine-story-label
      if: ${{ (steps.determine-issue-type.outputs.issue_type == 'Story') }}
      shell: bash
      run: |
        if [ "${{ steps.determine-story-type.outputs.story_type }}" == "Feature" ]; then
          echo "story_label=enhancement" >> "$GITHUB_OUTPUT"
        else
          echo "story_label=chore" >> "$GITHUB_OUTPUT"
        fi

    - name: Test Output
      run: echo "${{ steps.determine-story-label.outputs.story_label }}"

    - name: Set Story Label
      if: ${{ (steps.determine-issue-type.outputs.issue_type == 'Story') }}
      uses: actions-ecosystem/action-add-labels@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        labels: "${{ steps.determine-story-label.outputs.story_label }}"
        number: ${{ github.event.pull_request.number }}
          
      
      
